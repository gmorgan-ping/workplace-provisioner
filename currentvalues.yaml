Release "gm-workplace" has been upgraded. Happy Helming!
NAME: gm-workplace
LAST DEPLOYED: Wed Nov 18 09:23:07 2020
NAMESPACE: ping-cloud-devops-eks-gmorgan
STATUS: deployed
REVISION: 3
TEST SUITE: None
NOTES:
#-------------------------------------------------------------------------------------
# Ping DevOps
#
# Description: All Ping Identity product images with integration
#-------------------------------------------------------------------------------------
#
#         Product             Enabled
#  ------------------------ ------------
#  pingaccess               false
#  pingdataconsole          false
#  pingdatagovernance       false
#  pingdatasync             false
#  pingdelegator            true
#  pingdirectory            true
#  pingfederate-admin       true
#  pingfederate-engine      false
#
#  ldap-sdk-tools           false
#  pd-replication-timing    false
#
#-------------------------------------------------------------------------------------Capabilities:
  APIVersions:
  - crd.projectcalico.org/v1/IPAMBlock
  - certmanager.k8s.io/v1alpha1/ClusterIssuer
  - storage.k8s.io/v1beta1
  - crd.projectcalico.org/v1
  - authorization.k8s.io/v1/SubjectAccessReview
  - networking.k8s.io/v1beta1/IngressClass
  - crd.projectcalico.org/v1/NetworkPolicy
  - bitnami.com/v1alpha1
  - v1/ConfigMap
  - autoscaling/v2beta1/HorizontalPodAutoscaler
  - discovery.k8s.io/v1beta1/EndpointSlice
  - admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration
  - coordination.k8s.io/v1beta1/Lease
  - v1
  - v1/PersistentVolumeClaim
  - v1/PersistentVolume
  - v1/ServiceProxyOptions
  - rbac.authorization.k8s.io/v1beta1/RoleBinding
  - crd.k8s.amazonaws.com/v1alpha1
  - metrics.k8s.io/v1beta1/NodeMetrics
  - coordination.k8s.io/v1beta1
  - v1/Event
  - apps/v1/DaemonSet
  - authentication.k8s.io/v1beta1/TokenReview
  - certmanager.k8s.io/v1alpha1/Order
  - certificates.k8s.io/v1beta1
  - policy/v1beta1
  - policy/v1beta1/PodSecurityPolicy
  - storage.k8s.io/v1beta1/VolumeAttachment
  - admissionregistration.k8s.io/v1/MutatingWebhookConfiguration
  - authentication.k8s.io/v1
  - networking.k8s.io/v1
  - v1/LimitRange
  - v1/Node
  - apps/v1/ControllerRevision
  - batch/v1
  - apps/v1/Deployment
  - storage.k8s.io/v1beta1/StorageClass
  - coordination.k8s.io/v1/Lease
  - certmanager.k8s.io/v1alpha1/Challenge
  - metrics.k8s.io/v1beta1
  - apiregistration.k8s.io/v1beta1/APIService
  - storage.k8s.io/v1/CSINode
  - crd.projectcalico.org/v1/HostEndpoint
  - extensions/v1beta1
  - scheduling.k8s.io/v1beta1
  - admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration
  - scheduling.k8s.io/v1
  - coordination.k8s.io/v1
  - v1/PodExecOptions
  - rbac.authorization.k8s.io/v1/RoleBinding
  - crd.projectcalico.org/v1/GlobalNetworkSet
  - rbac.authorization.k8s.io/v1
  - node.k8s.io/v1beta1
  - v1/Pod
  - node.k8s.io/v1beta1/RuntimeClass
  - authorization.k8s.io/v1beta1
  - v1/Namespace
  - v1/Eviction
  - certmanager.k8s.io/v1alpha1
  - v1/PodTemplate
  - v1/Service
  - crd.projectcalico.org/v1/BGPPeer
  - crd.k8s.amazonaws.com/v1alpha1/ENIConfig
  - apiextensions.k8s.io/v1beta1
  - v1/Binding
  - authorization.k8s.io/v1beta1/SubjectAccessReview
  - storage.k8s.io/v1/VolumeAttachment
  - events.k8s.io/v1beta1
  - autoscaling/v1
  - storage.k8s.io/v1beta1/CSIDriver
  - crd.projectcalico.org/v1/IPPool
  - bitnami.com/v1alpha1/SealedSecret
  - rbac.authorization.k8s.io/v1/ClusterRole
  - scheduling.k8s.io/v1beta1/PriorityClass
  - crd.projectcalico.org/v1/NetworkSet
  - apiregistration.k8s.io/v1
  - authentication.k8s.io/v1beta1
  - v1/Endpoints
  - v1/NodeProxyOptions
  - v1/PodPortForwardOptions
  - crd.projectcalico.org/v1/BlockAffinity
  - crd.projectcalico.org/v1/ClusterInformation
  - authorization.k8s.io/v1
  - discovery.k8s.io/v1beta1
  - autoscaling/v2beta2/HorizontalPodAutoscaler
  - scheduling.k8s.io/v1/PriorityClass
  - crd.projectcalico.org/v1/BGPConfiguration
  - authorization.k8s.io/v1beta1/SelfSubjectRulesReview
  - rbac.authorization.k8s.io/v1beta1/Role
  - storage.k8s.io/v1beta1/CSINode
  - jaegertracing.io/v1/Jaeger
  - apps/v1
  - apiextensions.k8s.io/v1
  - v1/ResourceQuota
  - v1/ServiceAccount
  - authentication.k8s.io/v1/TokenReview
  - networking.k8s.io/v1/NetworkPolicy
  - admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration
  - crd.projectcalico.org/v1/GlobalNetworkPolicy
  - certmanager.k8s.io/v1alpha1/CertificateRequest
  - autoscaling/v2beta1
  - networking.k8s.io/v1beta1
  - v1/ComponentStatus
  - authorization.k8s.io/v1beta1/LocalSubjectAccessReview
  - metrics.k8s.io/v1beta1/PodMetrics
  - autoscaling/v2beta2
  - authorization.k8s.io/v1/LocalSubjectAccessReview
  - authorization.k8s.io/v1/SelfSubjectRulesReview
  - authorization.k8s.io/v1beta1/SelfSubjectAccessReview
  - apiextensions.k8s.io/v1beta1/CustomResourceDefinition
  - vpcresources.k8s.aws/v1beta1/SecurityGroupPolicy
  - admissionregistration.k8s.io/v1beta1
  - v1/Secret
  - networking.k8s.io/v1beta1/Ingress
  - crd.projectcalico.org/v1/FelixConfiguration
  - certmanager.k8s.io/v1alpha1/Certificate
  - rbac.authorization.k8s.io/v1beta1
  - v1/PodAttachOptions
  - rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding
  - vpcresources.k8s.aws/v1beta1
  - extensions/v1beta1/Ingress
  - certmanager.k8s.io/v1alpha1/Issuer
  - batch/v1/Job
  - policy/v1beta1/PodDisruptionBudget
  - batch/v1beta1
  - jaegertracing.io/v1
  - v1/TokenRequest
  - certificates.k8s.io/v1beta1/CertificateSigningRequest
  - apiextensions.k8s.io/v1/CustomResourceDefinition
  - admissionregistration.k8s.io/v1
  - apps/v1/StatefulSet
  - authorization.k8s.io/v1/SelfSubjectAccessReview
  - batch/v1beta1/CronJob
  - rbac.authorization.k8s.io/v1beta1/ClusterRole
  - storage.k8s.io/v1/CSIDriver
  - storage.k8s.io/v1
  - apps/v1/Scale
  - events.k8s.io/v1beta1/Event
  - autoscaling/v1/HorizontalPodAutoscaler
  - rbac.authorization.k8s.io/v1/Role
  - rbac.authorization.k8s.io/v1/ClusterRoleBinding
  - storage.k8s.io/v1/StorageClass
  - apiregistration.k8s.io/v1beta1
  - v1/PodProxyOptions
  - v1/ReplicationController
  - v1/Scale
  - apps/v1/ReplicaSet
  - apiregistration.k8s.io/v1/APIService
  HelmVersion: {}
  KubeVersion:
    Major: "1"
    Minor: 18+
    Version: v1.18.8-eks-7c9bda
Chart:
  apiVersion: v2
  appVersion: "2.0"
  description: All Ping Identity product images with integration
  home: https://devops.pingidentity.com/
  name: ping-devops
  type: application
  version: 0.2.6
Files: {}
Release:
  IsInstall: false
  IsUpgrade: true
  Name: gm-workplace
  Namespace: ping-cloud-devops-eks-gmorgan
  Revision: 3
  Service: Helm
Template:
  BasePath: ping-devops/templates
  Name: ping-devops/templates/NOTES.txt
Values:
  global:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: null
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
    license:
      secret:
        devOps: devops-secret
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services: {}
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  help:
    values: all
  ldap-sdk-tools:
    addReleaseNameToResource: prepend
    container:
      command: tail -f /dev/null
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: ldap-sdk-tools
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: edge
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
    license:
      secret:
        devOps: devops-secret
    name: ldap-sdk-tools
    probes:
      liveness:
        command: echo
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: echo
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services: {}
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pd-replication-timing:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: dsreplication-timing
      SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles
      STARTUP_BACKGROUND_OPTS: ""
      STARTUP_COMMAND: /opt/out/instance/bin/start-server
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingtoolkit
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
    license:
      secret:
        devOps: devops-secret
    name: pd-replication-timing
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services: {}
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingaccess:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: getting-started/pingaccess
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingaccess
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingaccess._defaultDomain_
        paths:
        - backend:
            servicePort: 3000
          path: /
      - host: pingaccess-admin._defaultDomain_
        paths:
        - backend:
            servicePort: 9000
          path: /
      tls:
      - hosts:
        - pingaccess._defaultDomain_
        - pingaccess-admin._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingaccess
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      acme:
        dataService: true
        port: 8080
        targetPort: 8080
      admin:
        dataService: true
        port: 9000
        targetPort: 9000
      runtime:
        dataService: true
        port: 3000
        targetPort: 3000
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingdataconsole:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    defaultLogin:
      server:
        host: pingdirectory
        port: 636
      username: administrator
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: baseline/pingdataconsole
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingdataconsole
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingdataconsole._defaultDomain_
        paths:
        - backend:
            servicePort: 8443
          path: /
      tls:
      - hosts:
        - pingdataconsole._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingdataconsole
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      https:
        dataService: true
        port: 8443
        targetPort: 8443
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingdatagovernance:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: baseline/pingdatagovernance-8.1.0.0
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingdatagovernance
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingdatagovernance._defaultDomain_
        paths:
        - backend:
            servicePort: 443
          path: /
      tls:
      - hosts:
        - pingdatagovernance._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingdatagovernance
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      https:
        dataService: true
        port: 443
        targetPort: 443
      ldaps:
        clusterService: true
        port: 636
        targetPort: 636
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingdatasync:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: simple-sync/pingdatasync
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingdatasync
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
    license:
      secret:
        devOps: devops-secret
    name: pingdatasync
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      https:
        dataService: true
        port: 443
        targetPort: 443
      ldaps:
        clusterService: true
        port: 636
        targetPort: 636
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingdelegator:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: true
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: baseline/pingdelegator
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingdelegator
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingdelegator._defaultDomain_
        paths:
        - backend:
            servicePort: 6443
          path: /
      tls:
      - hosts:
        - pingdelegator._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingdelegator
    pingDirectoryServer:
      hostname: pingdirectory
      port: 443
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    publicHostname: localhost
    services:
      https:
        dataService: true
        port: 6443
        targetPort: 6443
    tokenProvider:
      clientId: dadmin
      hostname: localhost
      port: 443
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingdirectory:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 2
      resources:
        limits:
          cpu: 8000m
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 2Gi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: true
    envs:
      MAKELDIF_USERS: "20000"
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: baseline/pingdirectory
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingdirectory
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingdirectory._defaultDomain_
        paths:
        - backend:
            servicePort: 443
          path: /
      tls:
      - hosts:
        - pingdirectory._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingdirectory
    persistentvolume:
      enabled: true
      volumes:
      - mountPath: /opt/out
        name: out-dir
        storage: 8Gi
        storageClassName: null
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 120
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 120
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      apis:
        dataService: true
        port: 2443
        targetPort: 2443
      https:
        dataService: true
        port: 443
        targetPort: 443
      ldap:
        dataService: true
        port: 389
        targetPort: 389
      ldaps:
        clusterService: true
        dataService: true
        port: 636
        targetPort: 636
    statefulSet:
      updateStrategy:
        partition: 0
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingfederate-admin:
    addReleaseNameToResource: prepend
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: Recreate
    enabled: true
    envs:
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: server-profiles/pingfederate
      SERVER_PROFILE_URL: https://github.com/gmorgan-ping/workplace-provisioner.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingfederate
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingfederate-admin._defaultDomain_
        paths:
        - backend:
            servicePort: 9999
          path: /
      tls:
      - hosts:
        - pingfederate-admin._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingfederate-admin
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      admin:
        dataService: true
        port: 9999
        targetPort: 9999
      clusterExternalDNSHostname: null
      clusterbind:
        clusterService: true
        port: 7600
        targetPort: 7600
      clusterfail:
        clusterService: true
        port: 7700
        targetPort: 7700
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
  pingfederate-engine:
    addReleaseNameToResource: prepend
    clustering:
      autoscaling:
        enabled: true
        maxReplicas: 4
        minReplicas: 1
        targetCPUUtilizationPercentage: 75
      autoscalingTemplate: []
    container:
      nodeSelector: {}
      replicaCount: 1
      resources:
        limits:
          cpu: 4
          memory: 8Gi
        requests:
          cpu: 500m
          memory: 500Mi
      tolerations: []
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
        type: RollingUpdate
    enabled: false
    envs:
      PF_ADMIN_PORT: "9999"
      SERVER_PROFILE_BRANCH: master
      SERVER_PROFILE_PATH: getting-started/pingfederate
      SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
    externalImage:
      curl: curlimages/curl:latest
    image:
      name: pingfederate
      pullPolicy: IfNotPresent
      repository: pingidentity
      tag: "2010"
    ingress:
      addReleaseNameToHost: subdomain
      annotations:
        kubernetes.io/ingress.class: nginx-public
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      defaultDomain: ping-devops.com
      enabled: true
      hosts:
      - host: pingfederate-engine._defaultDomain_
        paths:
        - backend:
            servicePort: 9031
          path: /
      tls:
      - hosts:
        - pingfederate-engine._defaultDomain_
        secretName: _defaultTlsSecret_
    license:
      secret:
        devOps: devops-secret
    name: pingfederate-engine
    probes:
      liveness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      readiness:
        command: /opt/liveness.sh
        failureThreshold: 4
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
    services:
      clusterExternalDNSHostname: null
      clusterbind:
        clusterService: true
        port: 7600
        targetPort: 7600
      clusterfail:
        clusterService: true
        port: 7700
        targetPort: 7700
      engine:
        dataService: true
        port: 9031
        targetPort: 9031
    vault:
      enabled: false
      hashicorp:
        log-level: info
        pre-populate-only: true
        preserve-secret-case: true
        role: k8s-default
        secret-volume-path: /run/secrets
#-------------------------------------------------------------------------------------
# To see values info, simply set one of the following on your helm install/upgrade
#
#    --set help.values=all         # Provides all (i.e. .Values, .Release, .Chart, ...) yaml
#    --set help.values=global      # Provides global values
#    --set help.values={ image }   # Provides image values merged with global
#-------------------------------------------------------------------------------------
